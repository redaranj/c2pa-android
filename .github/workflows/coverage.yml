name: Code Coverage

on:
  push:
    branches: [ main, develop, test/improve-coverage ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Download native libraries
      run: make download-android-binaries
    
    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-28
    
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        arch: x86_64
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
    
    - name: Run instrumented tests with coverage
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        arch: x86_64
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          ./gradlew :library:createDebugCoverageReport
          ./gradlew :library:jacocoInstrumentedTestReport
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./library/build/reports/jacoco/jacocoInstrumentedTestReport/jacocoInstrumentedTestReport.xml
        flags: android-instrumented
        name: c2pa-android
        fail_ci_if_error: true
        verbose: true
    
    - name: Upload coverage reports as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          library/build/reports/jacoco/jacocoInstrumentedTestReport/
          library/build/reports/coverage/androidTest/debug/
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./library/build/reports/jacoco/jacocoInstrumentedTestReport/jacocoInstrumentedTestReport.xml
        flags: android-instrumented
        name: c2pa-android
        fail_ci_if_error: false
        verbose: true